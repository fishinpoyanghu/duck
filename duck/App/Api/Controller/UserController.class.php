<?php
/**
 * Created by PhpStorm.
 * User: jiaruo
 * Date: 17/2/16
 * Time: 上午10:14
 */

namespace Api\Controller;

class UserController extends CommonController
{
    protected $userId = null;
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub 
        $this->checkGet(array('token'));
        $this->userId = $this->tokenToUserId(I('post.token'));
        
    }

    /**
     * 修改密码
     */
    public function changePwd(){
        if(IS_POST){
            $this->checkGet(array('oldPwd','newPwd','code'));
            $data = I('post.');
            $user = $this->getUsermsg($this->userId);

            if(md5($data['oldPwd']) != $user['password']){
                $this->echoJson(-10);
            }
            $resutl = M('member')->where(array('id'=>$this->userId))->setField('password',md5($data['newPwd']));
            if($resutl){
                echo json_encode(array('errcode'=>10000,'msg'=>'修改密码成功！'));exit;
            }
        }
        $this->echoJson(-1);
    }
	/**
     * 没获取密码
     */
    public function getUser(){ 
        if(IS_POST){
            $data = I('post.');
            $user = M('member')->field('id,account,status,token,realname,sex,nickname,phone,level,money,currency,action_code,dog_lev,machine,animal_num,wechat,alipay,enclosure_lev,references,tixian_animal,egg_parent_status,machine_egg,machine_animal,one_clean,crean_time')->where(array('id'=>$this->userId))->find(); 
            if($user['one_clean']){
                $daytime=$user['crean_time']-time();
                if($daytime >0){  
                      $user['one_clean']= $daytime?ceil($daytime/24/3600):0; 
                }else{
                      $user['one_clean']=0;
                }
                 
            }
            $user['all_animal']=$user['animal_num']+$user['machine_animal'];
            $farm_animal=M('user_farm')->where(array('userid'=>$this->userId))->field('num,add_num')->select();
            if($farm_animal){
                foreach($farm_animal as $v){
                    $user['all_animal']+=$v['num']+$v['add_num'];
                }
            }                      
                 

			$this->echoJson($user);
        }
        $this->echoJson(-1);
    }
	//有获取密码私有方法
	private function getUsermsg(){ 
            $user = M('member')->field('*')->where(array('id'=>$this->userId))->find(); 
            if($user['one_clean']){
                $daytime=$user['crean_time']-time();
                if($daytime >0){  
                      $user['one_clean']= $daytime?ceil($daytime/24/3600):0; 
                }else{
                      $user['one_clean']=0;
                }
            }
			return $user;
        
    }
	public function getBank(){
        if(IS_POST){
            $data = I('post.');
            $user = M('member')->field('id,account,bank_code,bank_name,bank_account')->where(array('id'=>$this->userId))->find();
			$user['bankData'] = $user['bank_name'].' (尾号'.substr($user['bank_code'],-4).')';
			$this->echoJson($user);
        }
        $this->echoJson(-1);
    }
    public function friendlist(){
        $user = $this->getUsermsg($this->userId);
        $user = M('member')->field('id,account,all_rate,realname ,nickname,egg_parent_status')->where(array('references'=>$user['account']))->select();
        if($user){
            foreach($user as $k =>$v){
                $user[$k]['account']= substr_replace($v['account'],'****',3,4);  
            }

        $this->echoJson($user);
        }else{
            $this->echoJson(10000);
        }

    }
    public function activityuser(){
         if(IS_POST){
            $this->checkGet(array('account','nickname','phone','realname','highpass'));
            
            $post = I('post.');
            $account=$post['account'];
            if (!preg_match('/^1[345789][0-9]{9,9}$/', $account)) {
                 $this->echoJson("账户手机格式不正确!");
            }  
           if (!preg_match('/^1[345789][0-9]{9,9}$/', $post['phone'])) {
                 $this->echoJson("账户手机格式不正确!");
            }
            $actricePrice=C('actricePrice')?C('actricePrice'):330;   
            $oneLevelBonus=C('oneLevelBonus')?C('oneLevelBonus'):8;
            if($post['recommend_account']){
                $usermsg=M('member')->where(array('account'=>$post['recommend_account']))->find(); 
                if($this->isFalse($usermsg)){
                    $this->echoJson('找不到推荐人账号！若不填则自己为推荐人！');
                }
            }else{
                $usermsg=$this->getUsermsg($this->userId);
            }
            $mymsg=$this->getUsermsg($this->userId); //无论谁是推荐人扣的鹅只扣我自己的,推荐奖就是给推荐人
            if($mymsg['animal_num']<$actricePrice){  
                 $this->echoJson("需要".$actricePrice."只鹅才能激活伙伴账户"); 
            } 
            $friend=M('member')->where(array('account'=>$account))->find();
            if($friend){
                  $this->echoJson("账户已存在！");
            }
            $phone=M('member')->where(array('phone'=>$post['phone']))->find();
            if($phone){
                  $this->echoJson("手机号已存在！");            }
            $nickname=M('member')->where(array('nickname'=>$post['nickname']))->find();
            if($nickname){
                  $this->echoJson("用户名已存在！");
            }
            $realname=M('member')->where(array('realname'=>$post['realname']))->find();
            if($realname){
                  $this->echoJson("姓名已存在！");
            }
            $result = M('member')->where(array('account'=>$mymsg['account']))->setDec('animal_num',$actricePrice);
            $result2 = M('member')->where(array('account'=>$usermsg['account']))->setInc('tixian_animal',$oneLevelBonus);
            if($this->isFalse($result) || $this->isFalse($result2)){
                $this->echoJson(-1);
            }
          

            $second_generation = $usermsg['references'] ? $usermsg['references'] : '';//2dai
            $three_generations = $usermsg['second_generation'] ? $usermsg['second_generation'] : '';//3dai
            $add['token']= md5(mt_rand(111,999).time().mt_rand(111,999));
            $add['password']=md5('123456');
            $add['highpass']=md5($post['highpass']);
            $add['active']=1;
            $add['reg_time']=time();
            $add['references']=$usermsg['account'];
            $add['account']=$post['account'];
            $add['alipay']=$post['alipay'];
            $add['wechat']=$post['wechat'];
            $add['phone']=$post['phone'];
            $add['realname']=$post['realname'];
            $add['nickname']=$post['nickname'];
            $add['sex']=$post['sex'];
            $add['second_generation']=$second_generation;
            $add['three_generations']=$three_generations; 
            $add['animal_num']=300;
            $result3=M('member')->add($add);
            
             if($this->isFalse($result3) ){
                $this->echoJson('注册失败请联系管理员！');
            }
           // addResourceLog($this->userId,1,$toUserId);
             
            $count=M('member')->where(array('references'=>$usermsg['account']))->count();
            
            if($count >=50){
                 M('member')->where(array('account'=>$usermsg['account']))->setField('machine',1); 
            }else if($count >=40){
                $lev=4;
            }else if($count >=30){
                $lev=3;
            }else if($count >=20){
                $lev=2;
            }else if($count >=10){
                $lev=1;
            }else{
                $lev=0;
            }
            if($lev){
               M('member')->where(array('account'=>$usermsg['account']))->setField('enclosure_lev',$lev); 
            }
            $content="您成功注册为TEC玩家，账号是{$post['account']}，密码是123456，快去修改密码！【天鹅城】";
            D('sms')->sendcode($post['phone'],$content);
           echo json_encode(array('errcode'=>10000,'msg'=>'注册用户成功！'));exit;
        }
    }

    /**
     * 激活下级
     * @param toUserId 下级用户ID 需要用鹅激活330只鹅
     */
   /* public function activeSubordinate(){
        if(IS_POST){
            $this->checkGet(array('toUserId'));
            $toUserId = I('post.toUserId');
            $toUser = M('member')->where(array('id'=>$toUserId,'active'=>0))->find();
            if($this->isFalse($toUser)){
                $this->echoJson(-13);
            }
            $actricePrice=C('actricePrice')?C('actricePrice'):330;  
            $code = M('member')->where(array('animal_num'=>array('egt',$actricePrice),'id'=>$this->userId))->find();
            if($this->isFalse($code)){
                $this->echoJson("需要$actricePrice只鹅才能激活伙伴账户");
            }
            $result = M('member')->where(array('id'=>$this->userId))->setDec('animal_num',$actricePrice);
            if($this->isFalse($result)){
                $this->echoJson(-1);
            }
            M('member')->where(array('id'=>$toUserId))->setField('active',1);
            M('member')->where(array('id'=>$toUserId))->setInc('animal_num',300);//激活写死300
			addResourceLog($this->userId,1,$toUserId);
            $user = $this->getUsermsg($this->userId); 
            $count=M('member')->where(array('references'=>$user['account']))->count();
            if($count >=49){
                 M('member')->where(array('id'=>$toUserId))->setField('machine',1); 
            }else if($count >=39){
                $lev=4;
            }else if($count >=29){
                $lev=3;
            }else if($count >=19){
                $lev=2;
            }else if($count >=9){
                $lev=1;
            }else{
                $lev=0;
            }
            if($lev){
               M('member')->where(array('id'=>$toUserId))->setField('enclosure_lev',$lev); 
            }
            $this->echoJson(10000);exit;
			$animalNo = $toUser['account'].'1';
            $lifeCycle = C('lifeCycle');//生命周期
            $expiredTime = time() + $lifeCycle * 86400;
            $animalResult = M('user_animal')->add(array(
                'userid'    => $toUserId,
                'animal_on' => $animalNo,
                'create_time'   => strtotime(date('Y-m-d',time()).' 00:00:00'),
                'expired_time'  => $expiredTime
            ));
			
            //动态奖金---第一部分---对直推者的奖励
            $user = $this->getUsermsg($this->userId);
            $effectiveUserCount = M('member')->where(array('active'=>1,'references'=>$user['account']))->count();//我的有效会员个数
			
            if(($effectiveUserCount % C('subordinateNumber')) == 0 && $effectiveUserCount != 0){ //达到条件 奖励富贵蛋
                if(M('member')->where(array('id'=>$this->userId))->setInc('currency',C('rewardNumber'))){
                    addBonusLog($this->userId,$toUserId,C('rewardNumber'),'直推'.$effectiveUserCount.'人,奖励'.C('rewardNumber').'个富贵蛋');
                }


            }
            //------------结束


            //动态奖金---第二部分---三级奖励
            //直属上级
			$one = M('member')->where(array('id'=>$this->userId))->setInc('currency',(C('oneLevelBonus')/100) * C('animalPrice'));
            if($one){
				//echo M('member')->_sql();
                addBonusLog($this->userId,$toUserId,(C('oneLevelBonus')/100) * C('animalPrice'),'一代奖励'.(C('oneLevelBonus')/100) * C('animalPrice').'个富贵蛋');
            }else{
				//echo 123;exit();
			}

            //第二级
            if(!$this->isFalse($user['references'])){
				//echo 123;exit();
                $UserReference = M('member')->where(array('account'=>$user['references']))->find();
                if(M('member')->where(array('account'=>$user['references']))->setInc('currency',(C('twoLevelsBonus')/100) * C('animalPrice'))){
                    addBonusLog($UserReference['id'],$toUserId,(C('twoLevelsBonus')/100) * C('animalPrice'),'二代奖励'.(C('twoLevelsBonus')/100) * C('animalPrice').'个富贵蛋');
                    //第三级
                    $twoUserReference = M('member')->where(array('account'=>$UserReference['references']))->find();
                    if($twoUserReference){
                        if(M('member')->where(array('account'=>$twoUserReference['account']))->setInc('currency',(C('threeLevelsBonus')/100) * C('animalPrice'))){
                            addBonusLog($twoUserReference['id'],$toUserId,(C('threeLevelsBonus')/100) * C('animalPrice'),'三代奖励'.(C('threeLevelsBonus')/100) * C('animalPrice').'个富贵蛋');
                        }
                    }
                }
            }
            //------------结束
            addResourceLog($this->userId,1,$toUserId);
            $this->echoJson(10000);
        }
        $this->echoJson(-1);
    }*/
    /**
     * 喂饲料
     * @param animalOn 鹅的编号
     */
  /*  public function feed()
    {

        if(IS_POST){
            $this->checkGet(array('animalOn'));
            $animalOn = I('post.animalOn');
            $animal = M('user_animal')->where(array('userid'=>$this->userId,'animal_on'=>$animalOn,'expired_time'=>array('gt',time())))->find();
            if($this->isFalse($animal)){//鹅是否存在
                $this->echoJson(-1);
            }
            $outputIng = M('beltline')->where(array('userid'=>$this->userId,'animal_on'=>$animalOn,'status'=>array('in','1,2')))->find(); //获取生产中的小鹅
            if(!$this->isFalse($outputIng)){
                $this->echoJson(-16);
            }
            $feedCount = M('member')->where(array('feed'=>array('egt',1),'id'=>$this->userId))->find();
            if($this->isFalse($feedCount)){
                $this->echoJson(-15);
            }
            $result = M('member')->where(array('id'=>$this->userId))->setDec('feed',1);
            if($this->isFalse($result)){
                $this->echoJson(-1);
            }
            addResourceLog($this->userId,2,$this->userId);
            //计算生产个数
            $day = pastDay(time(),$animal['create_time']);//距离现在过了多少天
            $amount = outputAmount($day);

            $id = M('beltline')->add(array(
                'userid'    =>  $this->userId,
                'animal_on' =>  $animalOn,
                'status'    =>  1,
                'amount'    =>  $amount,
                'create_time'   =>  time(),
                'expired_time'  =>  time() + 3600 * C('broodCycle')
            ));
            if($id){
                $this->echoJson(10000);
            }
        }
        $this->echoJson(-1);
    }*/

    /**
     * 转账交易
     */
   /* public function currencyTransaction()
    {
        if(IS_POST){
            $this->checkGet(array('mobile','number'));
            $mobile = I('post.mobile');
            $number = I('post.number');
            $toUser = M('member')->where(array('account'=>$mobile))->find();
            if($this->isFalse($toUser)){
                $this->echoJson(-17);
            }
            $user = $this->getUser($this->userId);
            if($user['currency'] < $number){
                $this->echoJson(-11);
            }
            $result_ = M('member')->where(array('id'=>$this->userId))->setDec('currency',$number);
            $result__= M('member')->where(array('account'=>$mobile))->setInc('currency',$number);
            if($result_ && $result__){
                M('currency_transaction_log')->add(array(
                    'userid'    =>  $this->userId,
                    'touserid'  =>  $toUser['id'],
                    'number'    =>  $number,
                    'create_time'   =>  time()
                ));
                $this->echoJson(10000);
            }
        }
        $this->echoJson(-1);
    }*/
    /**
     * 拾取鹅蛋
     */
    public function pickupEgg(){
        if(IS_POST){
            $this->checkGet('animalOn');
            $animalOn = I('post.animalOn');
            $beltline = M('beltline')->where(array('userid'=>$this->userId,'animal_on'=>$animalOn,'status'=>2,'expired_time'=>array('elt',time())))->find();
            if($this->isFalse($beltline)){
                $this->echoJson('-18');
            }
            $res = M('beltline')->where(array('userid'=>$this->userId,'animal_on'=>$animalOn,'status'=>2,'expired_time'=>array('elt',time())))->setField('status',3);
            if($this->isFalse($res)){
                $this->echoJson(-1);
            }
            $animal = M('user_animal')->where(array('animal_on'=>$animalOn))->find();
            M('user_animal')->where(array('animal_on'=>$animalOn))->setInc('hatchery',$beltline['amount']);
            $brooding = array(
                'userid'    =>  $this->userId,
                'animal_on' =>  $animalOn,
                'number'    =>  $beltline['amount'],
                'day'       =>  pastDay(time(),$animal['create_time']),
                'create_time'   =>  time()
            );
            M('brooding_log')->add($brooding);
            if(M('member')->where(array('id'=>$this->userId))->setInc('currency',$beltline['amount'])){
                $this->echoJson(array('number'=>$beltline['amount']));
            }
        }
        $this->echoJson(-1);
    }
    /**
     * 获取我的鹅
     */
    public function getUserAnimal(){
        if(IS_POST){
			M('beltline')->where(array('userid'=>$this->userId,'status'=>1,'expired_time'=>array('elt',time())))->setField('status',2);
            $data = M('user_animal')->field('animal_on as name')->where(array('userid'=>$this->userId,'expired_time'=>array('gt',time())))->select();
            if(!$data){
                $this->echoJson(10000);
            }
            foreach ($data as $k => $v){
				$status = M('beltline')->where(array('animal_on'=>$v['name']))->order('id desc')->getField('status');
                $data[$k]['name'] = $v['name'];
                //$data[$k]['delay'] = mt_rand(3,30);
				$data[$k]['delay'] = 0;
                //$data[$k]['top'] = mt_rand(0,12);
                $data[$k]['top'] = "1.3";
				$data[$k]['left'] = 9;
                $data[$k]['status'] = $status ? $status : 3;
            }
            $this->echoJson($data);
        }
        $this->echoJson(-1);
    }

    /**
     * 获得我的资源
     */
/*    public function getResources(){
        if(IS_POST){
            $user = M('member')->field('id,account,password,status,token,realname as nickname,feed,phone,level,money,currency,action_code,dog_lev,machine,animal_num,enclosure_lev')->where(array('token'=>I('token')))->find();
           echo M('member')->_sql();
            if($this->isFalse($user)){
                $this->echoJson(-2);
            }
            $user['animal_count'] = M('user_animal')->where(array('userid'=>$user['id'],'expired_time'=>array('gt',time())))->count();
            $this->echoJson($user);
        }
    }*/
    /**
     * 获得我的下级
     */
    public function getPartner()
    {
        if(IS_POST){

            $data = I();
            $user = M('member')->where(array('token'=>$data['token']))->find();
            if($this->isFalse($user)){
                $this->echoJson(-17);
            }
            $partner = M('member')->field('id,account,active,reg_time')->where(array('references'=>$user['account']))->select();
            $count = M('member')->field('id,account,active,reg_time')->where(array('references'=>$user['account']))->count();
           // echo M('member')->_sql();
            $data = array();
            $data['count'] = $count;
            $data['partner'] = $partner;
            $this->echoJson($data);
        }
    }
    

    /**
     * 购买记录
     */
    public function getUserFinance(){
        if(IS_POST){
            $data = I();
            $log = M('user_finance')
                ->where(array('userid'=>$this->userId))
                ->order('id desc')
                ->limit(20)
                ->select();
            foreach ($log as $k => $v){
                    if($v['create_time']){
                        $log[$k]['create_time'] = date('m-d',$v['create_time']);
                    }
            }
            $this->echoJson($log);
        }
    }

    /**
     * 获得使用资源记录
     */
    public function getUseLog(){
        if(IS_POST){
            $data = I();
            $log = M('resource_log')
                ->where(array('userid'=>$this->userId))
                ->order('id desc')
                ->limit(20)
                ->select();
            foreach ($log as $k => $v){
                if($v['create_time']){
                    $log[$k]['create_time'] = date('m-d',$v['create_time']);
                }
                if($v['type'] == 1){
                    $log[$k]['type'] = "激活码";
                }elseif($v['type'] == 2){
                    $log[$k]['type'] = "喂养饲料";
                }
            }
            $this->echoJson($log);
        }
    }
    /**
     * 获得产蛋记录
     */
    public function getBroodingLog(){
        if(IS_POST){
            $data = I();
            $log = M('brooding_log')
                ->where(array('userid'=>$this->userId))
                ->order('id desc')
                ->limit(20)
                ->select();
            foreach ($log as $k => $v){
                if($v['create_time']){
                    $log[$k]['create_time'] = date('m-d',$v['create_time']);
                }
            }
            $this->echoJson($log);
        }
    }

    /**
     * 获得奖励记录
     */
    public function getRewardLog(){
        if(IS_POST){
            $data = I();
            $log = M('bonus_log')
                ->where(array('userid'=>$this->userId))
                ->order('id desc')
                ->limit(20)
                ->select();
            foreach ($log as $k => $v){
                if($v['create_time']){
                    $log[$k]['create_time'] = date('m-d',$v['create_time']);
                }
            }
            $this->echoJson($log);
        }
    }
    /**
     * 出售鹅蛋
     */
   /* public function saleEgg(){
		$feed = 0.95;
        if(IS_POST){
            $data = I();
            $user = M('member')->where(array('id'=>$this->userId))->find();
            if($user['currency'] < $data['eggNum']){
                $this->echoJson('-19');
            }
            if($data['purchaserType'] == 1){ //出售给市场
                if(M('member')->where(array('id'=>$this->userId))->setDec('currency',$data['eggNum'])){
                    $id = M('market')->add(array(
                        'userid'    =>  $this->userId,
                        'number'    =>  $data['eggNum'],
                        'status'    =>  1,
                        'type'      =>  1
                    ));
                }
            }else{//出售给平台9折
                $market = M('market_price')->where(array('start'=>array('elt',date('Y-m-d',time()))))->order('start desc')->find();

                $price = $market['price'] * $data['eggNum'] * $feed;

                if(M('member')->where(array('id'=>$this->userId))->setDec('currency',$data['eggNum'])){
                    $res = M('market')->add(array(
                        'userid'    =>  $this->userId,
                        'number'    =>  $data['eggNum'],
                        'price'     =>  $price,
                        'status'    =>  3,
                        'create_time'   =>  time(),
                        'type'      =>  2
                    ));
                    $id = M('member')->where(array('id'=>$this->userId))->setInc('money',$price);
                }
            }
            if($id){
                echo json_encode(array('errcode'=>10000,'msg'=>'出售成功！'));exit;
            }
        }
        $this->echoJson(-1);
    }*/

    /**
     * 市场列表
     */
    public function marketList(){
        if(IS_POST){
            $log = M('market as m')
                ->field('m.id,m.userid,m.number,member.account')
                ->join('gs_member as member on member.id = m.userid')
                ->where(array('m.status'=>1))->select();
            $this->echoJson($log);
        }
        $this->echoJson(-1);

    }
    
	//退出登录 
	public function outLogin(){
        $_SESSION['token'] = null;
        $this->echoJson(10000);
    }
	//获得我购买的单 子
	public function getMyDeal(){
        if(IS_POST){
            $data = M('market as market')->field('market.*,user.account')->join('inner join gs_member as user on user.id = market.userid')->where(array('market.touserid'=>$this->userId,'market.status'=>2))->select();
            $this->echoJson($data);
        }
        $this->echoJson(-1);
    }
	//钱包
	public function getWallet(){
		if(IS_POST){
			$user = M('member')->where(array('id'=>$this->userId))->find();
			$cash_log_a = M('member_cash_log')->where(array('touch_member'=>$user['account'],'status'=>0,'zhuangtai'=>1,'wallet'=>1))->order('id desc')->limit(10)->select();
			foreach($cash_log_a as $k => $v){
				$cash_log_a[$k]['date'] = date('m-d',$v['date']);
			}
			$cash_log_b = M('member_cash_log')->where(array('touch_member'=>$user['account'],'status'=>1,'wallet'=>1))->order('id desc')->limit(10)->select();
			foreach($cash_log_b as $k => $v){
				$cash_log_b[$k]['date'] = date('m-d',$v['date']);
			}
			$data['money'] = $user['money'];
			$data['recharge'] = $cash_log_a;
			$data['drawing'] = $cash_log_b;
			$this->echoJson($data);
		}
	}
	
	
	//获得公告
	public function getNotice(){
		$res = M('notice')->order('id desc')->find();
		$res['date'] = date('m-d',$res['date']);
		$this->echoJson($res);
	}
	 public function getIP(){
        $ip     =   getenv( 'REMOTE_ADDR ');
        $ip_    = getenv( 'HTTP_X_FORWARDED_FOR ');
        if(($ip_ != " ") && ($ip_ != "unknown ")){
            $ip=$ip_;
        }
        return   $ip;
    }
   /* public function aliPay(){
		if(IS_POST){
			if(I('post.money') % 50 != 0 || I('post.money') < 1 ){
				$this->echoJson(-25);
			}
			
			$money = I('post.money') * 100;
			//$money = 1;
			$orderId = mt_rand(1111,9999).time().mt_rand(1111,9999);
			$totalAmount = $money;
			$productName = "UserRecharge";
		
			$requestData = array();
			$requestData["callBack"]    = "http://baidu.com/index.php/Return/getReturnAliPay";
			$requestData["charset"]     = "02";
			$requestData["merchantId"]  = "***";
			$requestData["msgType"]     = "01";
			$requestData["orderId"]     = $orderId;
			$requestData["orderTime"]   = date('Ymdhis',time());
			$requestData["payWay"]      = "ZFBZF";
			$requestData["productDesc"] = "UserRecharge";
			$requestData["productName"] = $productName;
			$requestData["signType"]    = "RSA";
			$requestData["terminalIp"]  = $this->getIP() ? $this->getIP() :"139.122.22.103";
			$requestData["totalAmount"] = $totalAmount;
			$requestData["version"]     = "1.0.0";
			$signData = "";
			foreach($requestData as $key => $value)  {
				if( $value != ''){
					$signData = $signData.$key.'='.$value.'&';
				}
			}
			//echo $orderId."\n";
			//echo $signData;
			$merchantSign = "";
			$merchantCert ="";
			//RSA加密
			$certPath    = "./cert/";
			$certPass    = 749135;
			$signData= substr($signData,0,strlen($signData)-1);
			
			$certPaths = $certPath."***.p12";
			
			$rsaSignData =$this->rsaSign($certPaths,$certPass,$signData);
			$merchantCert = $rsaSignData['merchantCert'];
			$merchantSign = $rsaSignData['merchantSign'] ;

			//echo $url;die;
			reset($requestData);
			$requestData["merchantCert"]      = $merchantCert;
			$requestData["merchantSign"]      = $merchantSign;
				  
			$sTotalString = POSTDATA("https://oic.mfe88.net/mrpos/balipay1/ALI4080010.do",$requestData);
			
			$recv = $sTotalString["MSG"];
			$responseData = json_decode(iconv('GBK','UTF-8',$recv),true);
			$status = $responseData["respType"];
			//echo '状态'.$status;
			$code_img_url="";
			if($status != "R"){
				echo "交易失败";
			}else{
				$user = M('member')->where(array('id'=>$this->userId))->find();
				//村数据库
				M('member_cash_log')->add(array(
					'prize'	=>	I('post.money'),
					'touch_member'	=> $user['account'],
					'status'		=>	0,
					'content'		=>	"用户充值",
					'wallet'		=>	1,
					'zhuangtai'		=>	2,
					'orderid'		=>	$orderId,
					'date'			=>	time()
				));
				
				
				
				
				$qrCode = $responseData["qrCode"];
				$qrFileName = './Uploads/qrCodePath/'.$orderId.'.png';
				$errorCorrectionLevel = 'L';//容错级别
				$matrixPointSize = 10;//生成图片大小
				//生成二维码图片
				
				//vendor("phpqrcode.phpqrcode");
				$this->echoJson(array('url'=>$qrCode,'res'=>base64_encode(base64_encode(base64_encode($orderId)))));
			}
		}
        

    }*/
   /* public function rsaSign($certPaths,$certPass,$signData)
    {
        $rtValue = array();
        $pkcs12 = file_get_contents($certPaths);
		
        openssl_pkcs12_read($pkcs12,$certs,$certPass);
		
        $privateKey = $certs['pkey'];
        $publicKey = $certs['cert'];
        $merchantCert = strtoupper(bin2hex(base64_decode($publicKey)));
        $merchantCert = substr($merchantCert,24,strlen($merchantCert));
        $merchantCert = substr($merchantCert,0,strlen($merchantCert)-20);
		
        openssl_sign($signData,$binarySignature,$privateKey,OPENSSL_ALGO_SHA1);
		//echo 123;die;
        $merchantSign = strtoupper(bin2hex($binarySignature));
        $rtValue['merchantCert']=$merchantCert;
        $rtValue['merchantSign']=$merchantSign;
		
        return $rtValue;
    }
	public function scanpay_result(){
		$this->display();
	}
	
	
	
	public function wechatPay(){
		if(IS_POST){
			if(I('post.money') % 50 != 0 || I('post.money') < 1 ){
				$this->echoJson(-25);
			}
			$money = I('post.money');
			$service       = "pay.weixin.native";
			$version       = "1.0";
			$charset       = "UTF-8";
			$total_fee     = $money*100;
			$out_trade_no  = mt_rand(1111,9999).time().mt_rand(1111,9999);
			$body          = "user";
			$attach        = "user";
			$mch_create_ip = "139.16.223.12";
			$pay_type      = "pc";

			$sign_type     = "RSA";
			$mch_id       = "***";
			$signKey      = 123456;

			$notify_url   = "http://baidu.com/index.php/Return/getReturnWechat";
			$nonce_str    = strtotime("now");

			$reqUrl       =  'http://oic.mfe88.net/mrpos/bmcgwxpy/4420537.do';




			$requestData = array();
			$requestData["attach"]    = urlencode(iconv('GB2312','UTF-8',$attach));
			$requestData["body"] = urlencode(iconv('GB2312','UTF-8',$body));
			$requestData["charset"]    = $charset;
			$requestData["mch_create_ip"]     = $mch_create_ip;
			$requestData["mch_id"]   = $mch_id;
			$requestData["nonce_str"] = $nonce_str;
			$requestData["notify_url"]    = $notify_url;
			$requestData["out_trade_no"]      = $out_trade_no;
			$requestData["pay_type"]      = $pay_type;
			$requestData["service"]         = $service;
			$requestData["sign_type"]     = $sign_type;
			$requestData["total_fee"]       = $total_fee;
			$requestData["version"]      = $version;
			$signData = "";
			foreach($requestData as $key => $value)  {
				if( $value != ''){
					$signData = $signData.$key.'='.$value.'&';
				}

			}
			$sign = "";
			//MD5方式签名
			if($sign_type == "MD5"){
				$signData=$signData.'key='.$signKey;
				$sign = strtoupper(md5(iconv('GB2312','UTF-8',$signData)));
				$requestData["sign"] = $sign;
			}else{
				//RSA
				$certPath    = "./cert/";
				$certPass    = 749135;
				$signData= substr($signData,0,strlen($signData)-1);
				$certPaths = $certPath.$mch_id.".p12";
				$rsaSignData =rsaSign($certPaths,$certPass,iconv('GB2312','UTF-8',$signData));
				$merchantCert = $rsaSignData['merchantCert'];
				$merchantSign = $rsaSignData['merchantSign'] ;
				$requestData["cert"] = $merchantCert;
				$requestData["sign"] = $merchantSign;
			}
			$signData = str_replace('&not',htmlspecialchars('&not'),$signData);
			//echo $signData;
			$xmlData = arrayToXml($requestData);
			RecordLog("YGM",$xmlData);
			$sTotalString = POSTDATA1($reqUrl,$xmlData);
			$recv = $sTotalString["MSG"];
			$responseData = xmlToArray($recv);
			$status = $responseData["status"];
			$code_img_url="";
			if($status != "0"){
				echo "交易失败";
			}else{
				if($pay_type == "pc"){
					
					$user = M('member')->where(array('id'=>$this->userId))->find();
					//村数据库
					M('member_cash_log')->add(array(
						'prize'	=>	$money,
						'touch_member'	=> $user['account'],
						'status'		=>	0,
						'content'		=>	"用户充值",
						'wallet'		=>	1,
						'zhuangtai'		=>	2,
						'orderid'		=>	$out_trade_no,
						'date'			=>	time()
					));
					
					
					$code_img_url = $responseData["code_img_url"];
					$params = "code_img_url=".$code_img_url."&out_trade_no=".$out_trade_no."&total_fee=".$total_fee."&body=".$body;
					//header("Location: scanpay_result.php?".$params);
					$this->echoJson(array('url'=>$code_img_url));
				}else{
					echo "<br/>";
					echo "app下单结果";
					echo "<br/>";
					echo "支持的支付类型:".$responseData["services"];
					echo "<br/>";
					echo "授权码:".$responseData["token_id"];
					echo "<br/>";
				}
			}
		}
	}*/
    //还要给出有多小鹅，蛋可以收获。
    public function getUserfarm(){ 
        if(IS_POST){
            $data = M('user_farm')->field('id,type,num as base_num,add_num,egg_rate,egg_allrate,egg_status')->where(array('userid'=>$this->userId))->order('id   asc')->select();
            if($data){
                 $this->echoJson($data);
            }
            $this->echoJson(10000);
        }      
        $this->echoJson(-1);
    }

    public function getfriendsfarm(){ 
        if(IS_POST){
           $this->checkGet(array('friendid'));
            $data=I('post.');
            $myuser = $this->getUsermsg($this->userId);
            $friend=M('member')->where(array('references'=>$myuser['account'],'id'=>$data['friendid']))->find();
            if(!$friend){
                $this->echoJson('信息错误！');
            }
            $farm = M('user_farm')->field('id,type,num as base_num,add_num,egg_rate,egg_allrate,egg_status')->where(array('userid'=>$data['friendid']))->order('id   asc')->select();

            $user = M('member')->field('id,account,status,token,realname as nickname,phone,level,money,currency,action_code,dog_lev,machine,animal_num,enclosure_lev,egg_parent_status,machine_egg,machine_animal,one_clean,crean_time')->where(array('id'=>$data['friendid']))->find(); 
              $user['all_animal']=$user['animal_num']+$user['machine_animal'];
                $farm_animal=M('user_farm')->where(array('userid'=>$data['friendid']))->field('num,add_num')->select();
                if($farm_animal){
                    foreach($farm_animal as $v){
                        $user['all_animal']+=$v['num']+$v['add_num'];
                    }
                }
                  
            $data['friend_farm']=$farm;
            $data['friend_usermsg']=$user;
            if($data){
                 $this->echoJson($data);
            }
            $this->echoJson(10000);
        }      
        $this->echoJson(-1);
    }



    //狗升级数量
    public function dogUpgrade(){
        if(IS_POST){
           // $dog_upgradenum=C('dog_upgradenum');
            $dog_maxlev=C('dog_maxlev')?C('dog_maxlev'):9;
            /*if($dog_upgradenum+0<1){
                $this->echoJson('狗数'); 
            }*/
            $data = M('member')->field('animal_num,dog_lev')->where(array('id'=>$this->userId))->find();
            $dogmsg=M('dogmsg')->where(array('lev'=>$data['dog_lev']+1))->find();
            if(!$dogmsg){
                $this->echoJson('升级失败狗得等级已经是最高！');
            } 

            if($data['animal_num']<  $dogmsg['updatedog_num']){
                $this->echoJson('升级失败,升级狗需要'.$dogmsg['updatedog_num'].'只鹅');
            }
            if($data['dog_lev'] >= $dog_maxlev){
                $this->echoJson('升级失败狗得等级已经是最高！');
            }
            $r2='';
            //
            $r1=M('member')->where(array('id'=>$this->userId))->setDec('animal_num',$dogmsg['updatedog_num']);
          //  var_dump($dogmsg);
            if($dogmsg['upgrade_percent']){
                $rand=mt_rand(1,100);
               // echo $dogmsg['upgrade_percent'],'kkk'; echo $rand;
                if($dogmsg['upgrade_percent']>=$rand){
                    $r2=M('member')->where(array('id'=>$this->userId))->setInc('dog_lev',1);
                    if($this->isFalse($r1) || $this->isFalse($r2)){
                        $this->echoJson(-1);
                    }
                }
            }
            $msg=$r2?'恭喜你!升级狗成功！ ':'倒霉了,升级狗失败了 -.-';
            addLog($this->userId,'升级狗'.$msg,9,$dogmsg['updatedog_num']); 
            $code=$r2?10000:-1;
           // $errmsg=$r2?10000:$msg;
            echo json_encode(array('errcode'=>$code,'msg'=>$msg));exit;
        }      
        $this->echoJson(-1); 

    }
    //动物数量购买机器
    public function buymachine(){
        $machine_num=C('machine_animal_num')?C('machine_animal_num'):1000;
        $user = $this->getUsermsg($this->userId);
        if($user['machine']==1){
            $this->echoJson('你已购买机器！');
        }
        if($user['animal_num'] >= $machine_num && $machine_num ){
            $r2=M('member')->where(array('id'=>$this->userId))->setDec('animal_num',$machine_num);
            if(!$this->isFalse($r2)){
                M('member')->where(array('id'=>$this->userId))->setField('machine',1);
            }
            echo json_encode(array('errcode'=>10000,'msg'=>'购买机器成功！'));exit;
        }
        $this->echoJson('鹅数量不足,购买失败');
    } 

    //动物数量购买机器
    public function buyoneclean(){ 
        $one_clean=C('one_clean')?C('one_clean'):100;
        $user = $this->getUsermsg($this->userId);
        $time=time();
        if($user['one_clean']==1 && $user['crean_time']>$time-3600*24*30){
            $this->echoJson('你已经购买了一键打扫了！');
        }
 
        if($user['animal_num'] >= $one_clean  ){ 
            $data['one_clean']=1;
            $data['crean_time']=$time+3600*24*30;
            $data['animal_num']=$user['animal_num']-$one_clean;
            M('member')->where(array('id'=>$this->userId))->save($data);
            addLog($this->userId,'一键打扫',10,$one_clean); 
            echo json_encode(array('errcode'=>10000,'msg'=>'购买成功！'));exit;
             
        }
        $this->echoJson('鹅数量不足,购买失败');
    } 


    //输入用户账号获取用户信息
    public function transfer(){
        if(IS_POST){ 
            $this->checkGet(array('type','num','account','super','paypwd','realname')); //1 就是鹅 2是鹅蛋
            $type=I('post.type'); 
            $num=I('post.num')+0; 
            $super=I('post.super');
            $account=I('post.account'); 
            $paypwd=I('post.paypwd'); 
            $realname=I('post.realname'); 
            $friend=M('member')->field('id')->where(array('account'=>$account,'realname'=>$realname))->find();
            if($this->isFalse($friend)){
                $this->echoJson("找不到账号,用户名跟账号必须匹配！"); 
            }
            if($num <10 || ($num % 10 !=0 )){
                $this->echoJson('转让数量必须是10的倍数！'); 
            }
            $farmcount= M('user_farm')->where(array('userid'=>$this->userId))->count();
            if($farmcount==0){
                $this->echoJson('必须先开地才能交易！'); 
            }
            // M('member')->where(array('id'=>$this->userId))->setDec('animal_num',$animal_num);
            $transfer_percent=C('transfer_percent')?C('transfer_percent')/100:0.1; //手续费百分比
            
            $usermsg=M('member')->field('animal_num,currency,highpass')->where(array('id'=>$this->userId))->find();
           // echo md5($post['paypwd']),'</br>';
          //  echo $usermsg['highpass'];exit;
            if(md5($paypwd)!=$usermsg['highpass']){
                 $this->echoJson('支付密码错入错误！'); 
            }
            //需求更改。订单生产就扣钱。然后交易完成后钱才会到对方那里。
            if($type==1){ //转鹅 15快池全开不用手续费
                 
                $transfer_percent = $farmcount==15?0:$transfer_percent;
                $money=$num*(1+$transfer_percent);
                if($money > $usermsg['animal_num']){
                    $this->echoJson("转账需要$money 只鹅(包含手续费用!)"); 
                }  
                if($super){
                    $r1=M('member')->where(array('id'=>$this->userId))->setDec('animal_num',$money);
                    if($this->isFalse($r1) ){
                        $this->echoJson(-1);
                    }
                    $r2=M('member')->where(array('id'=>$friend['id']))->setInc('animal_num',$num);
                    if($this->isFalse($r2)){
                        $this->echoJson(-1);
                    }
                }else{
                     $r1=M('member')->where(array('id'=>$this->userId))->setDec('animal_num',$money);
                    if($this->isFalse($r1) ){
                        $this->echoJson(-1);
                    }

                }
                $add['userid']=$this->userId;
                $add['touserid']=$friend['id'];
                $add['create_time']=time();
                $add['price']=$money;
                $add['realprice']=$num;
                $add['type']=1;
                $add['status']=2;//转出
                $add['super']=$super;
                //$add['pay_type']=$super?3:1;
                M('transfer_log')->add($add);

               /* $add['userid']= $friend['id'];
                $add['touserid']= $this->userId;
                $add['create_time']=time();
                $add['price']=$money;
                $add['realprice']=$num;
                $add['type']=1;
                $add['status']=1; //转入
                M('transfer_log')->add($add);*/
                echo json_encode(array('errcode'=>10000,'msg'=>'转账成功！'));exit;
            }else{ //转鹅蛋 10块绿池开了不用手续费 
                $count= M('user_farm')->where(array('userid'=>$this->userId,'type'=>1))->count();
                $transfer_percent = $count==10?0:$transfer_percent;
                $money=$num*(1+$transfer_percent);
                if($money > $usermsg['currency']){
                    $this->echoJson("转账需要$money 个蛋(包含手续费用!)"); 
                } 
                if($super){ 
                    $r1=M('member')->where(array('id'=>$this->userId))->setDec('currency',$money);
                    if($this->isFalse($r1) ){
                        $this->echoJson(-1);
                    }
                    $r2=M('member')->where(array('id'=>$friend['id']))->setInc('currency',$num);
                    if($this->isFalse($r2)){
                        $this->echoJson(-1);
                    }
                }else{
                    $r1=M('member')->where(array('id'=>$this->userId))->setDec('currency',$money);
                    if($this->isFalse($r1) ){
                        $this->echoJson(-1);
                    }
                }
                $add['userid']=$this->userId;
                $add['touserid']=$friend['id'];
                $add['create_time']=time();
                $add['price']=$money;
                $add['realprice']=$num;
                $add['type']=2;
                $add['status']=2;//转出
                $add['super']=$super; 
                M('transfer_log')->add($add);
                 
               /* $add['userid']= $friend['id'];
                $add['touserid']= $this->userId;
                $add['create_time']=time();
                $add['price']=$money;
                $add['realprice']=$num;
                $add['type']=2;
                $add['status']=1; //转入
                M('transfer_log')->add($add);*/
                echo json_encode(array('errcode'=>10000,'msg'=>'转账成功！'));exit;
            }
             
             
        } 
        $this->echoJson(-1);

    }
     
    public function surepay(){ //确认付款
           if(IS_POST){
            $this->checkGet(array('id'));
            $data = I('post.');
             $log=M('transfer_log')->where('id='.$data['id'].' and touserid='.$this->userId.' and paystatus=1');
            if($this->isFalse($log)){
                 $this->echoJson('订单不存在!');
            } 
            $resutl =M('transfer_log')->where(array('id'=>$data['id']))->setField('paystatus',2);
            if($resutl){
                echo json_encode(array('errcode'=>10000,'msg'=>'确认付款成功!'));exit;
            }
        }
        $this->echoJson(-1);
       
    }
    //需求更改。订单生产就扣钱。然后交易完成后钱才会到对方那里。
    public function sureaccept(){ //确认收款  
        if(IS_POST){
            $this->checkGet(array('id'));
            $usermsg = $this->getUsermsg($this->userId);
            $data = I('post.');
            $log=M('transfer_log')->where('id='.$data['id'].' and userid='.$this->userId.' and paystatus=2')->find();
            if($this->isFalse($log)){
                 $this->echoJson('订单不存在!');
            } 

             
            if($log['super']==0){
                if($log['type']==1){ //1 送鹅 2送蛋
                    /*if($usermsg['animal_num'] < $log['price']){
                        $this->echoJson('动物数量不足以出售,不能确认收款!');
                    }
                    $r1=M('member')->where(array('id'=>$this->userId))->setDec('animal_num',$log['price']);
                    if($this->isFalse($r1) ){
                        $this->echoJson(-1);
                    }*/
                    $r2=M('member')->where(array('id'=>$log['touserid']))->setInc('animal_num',$log['realprice']);
                    if($this->isFalse($r2)){
                        $this->echoJson(-1);
                    }
                }
                if($log['type']==2){
                    /*if($usermsg['currency'] < $log['price']){
                        $this->echoJson('蛋数量不足以出售,不能确认收款!');
                    }
                    $r1=M('member')->where(array('id'=>$this->userId))->setDec('currency',$log['price']);
                    if($this->isFalse($r1) ){
                        $this->echoJson(-1);
                    }*/
                    $r2=M('member')->where(array('id'=>$log['touserid']))->setInc('currency',$log['realprice']);
                    if($this->isFalse($r2)){
                        $this->echoJson(-1);
                    }

                } 
                 
            }
            $resutl   =M('transfer_log')->where(array('id'=>$data['id']))->setField('paystatus',3);
            if($resutl){
               echo json_encode(array('errcode'=>10000,'msg'=>'确认收款成功！'));exit;
            }
        }
        $this->echoJson(-1);
    }
    public function buylist(){  
        if(IS_POST){  
             $log=M('transfer_log l')->field('l.id,create_time,type,realprice,m.account,l.paystatus,m.nickname,m.realname')->join('gs_member as m on m.id = l.userid') ->where(array('l.touserid'=>$this->userId))->order('l.id desc')->select(); 
            if($this->isFalse($log)){
                 $this->echoJson(10000);
            }
            foreach($log as $k=>$v){
              
                $log[$k]['create_time']=date('m-d ',$v['create_time']);
            } 
             $this->echoJson($log);
        }
        $this->echoJson(-1);

      
        

    }

    public function salelist(){
        if(IS_POST){
            $log=M('transfer_log l')->field('l.id,create_time,type,realprice,m.account,l.paystatus,m.nickname,m.realname')->join('gs_member as m on m.id = l.touserid') ->where(array('l.userid'=>$this->userId))->order('l.id desc')->select(); 
            if($this->isFalse($log)){
                 $this->echoJson(10000);
            }
            foreach($log as $k=>$v){ 
                $log[$k]['create_time']=date('m-d ',$v['create_time']);
            } 
             $this->echoJson($log);
        }
        $this->echoJson(-1);

    }


    public function pushMachine(){
        if(IS_POST){
            $this->checkGet(array('machine_egg'));
            $machine_egg = I('post.machine_egg');
            if($machine_egg < 100 || ( $machine_egg % 100!=0 )){
                $this->echoJson('蛋数量必须是100的倍数！');
            }
            $machine_max_eggnum=C('machine_max_eggnum')?C('machine_max_eggnum'):18000;

            $currency=M('member')->where(array('id'=>$this->userId))->field('currency,machine_egg')->find();  
            if($machine_egg > $currency['currency']){
                $this->echoJson(-19);
            }
            if($currency['machine_egg']+$machine_egg>$machine_max_eggnum){
                 $last=$machine_max_eggnum-$currency['machine_egg'];
                 $this->echoJson("孵化最大量是18000个蛋,你还可以放".$last);
            }
            $r2 = M('member')->where(array('id'=>$this->userId))->setDec('currency',$machine_egg);
            if($this->isFalse($r2)){
                $this->echoJson(-1);
            }
            $r1 = M('member')->where(array('id'=>$this->userId))->setInc('machine_egg',$machine_egg); 
            if($this->isFalse($r1)){
                $this->echoJson(-1);
            }
            addLog($this->userId,'孵化机',10,$machine_egg); 
            echo json_encode(array('errcode'=>10000,'msg'=>'操作成功！'));exit;
         
        }
        $this->echoJson(-1);

    }

    public function getMachineEgg(){
        if(IS_POST){
            $this->checkGet(array('machine_egg'));
            $egg = I('post.machine_egg');  
            $machine_egg=M('member')->where(array('id'=>$this->userId))->field('machine_egg,currency')->find();

            if($machine_egg['machine_egg']>=$egg +0){
                $save['currency']=$machine_egg['currency']+$egg;
                $save['machine_egg']=$machine_egg['machine_egg']-$egg;
                $r1=M('member')->where(array('id'=>$this->userId))->save($save); 
                if($this->isFalse($r1)){
                    $this->echoJson(-1);
                }
                addLog($this->userId,'孵化机取出鹅蛋',11,$machine_egg['machine_egg']); 
                $this->echoJson(10000);
            }else{
                 $this->echoJson('孵化机没有鹅蛋！');
            }
            
         
        }
        $this->echoJson(-1);

    }
    public function getMachineAnimal(){
        if(IS_POST){ 
            $machine_egg=M('member')->where(array('id'=>$this->userId))->field('animal_num,machine_animal')->find();  
            if($machine_egg['machine_animal']>0){
                $save['animal_num']=$machine_egg['animal_num']+$machine_egg['machine_animal'];
                $save['machine_animal']=0;
                $r1=M('member')->where(array('id'=>$this->userId))->save($save); 
                if($this->isFalse($r1)){
                    $this->echoJson(-1);
                }
                addLog($this->userId,'孵化机取出鹅',11,$machine_egg['machine_animal']); 
                $this->echoJson(10000);
            }else{
                $this->echoJson('孵化机没小鹅!');
            }
        }
        $this->echoJson(-1);

    }

    //生长记录
    public function getRateLog(){  
        if(IS_POST){ 
            $log=M('rate_log')->where(array('userid'=>$this->userId))->order('id desc')->select(); 
            if($log){
                foreach($log as $k=>$v){
                    
                    $log[$k]['base_rate']=$v['base_rate']*100 .'%'; 
                    $log[$k]['enclosure_rate']=$v['enclosure_rate']?'-'.$v['enclosure_rate']*100 .'%':0; 
                    $log[$k]['dog_rate']=$v['dog_rate']*100 .'%';
                    $log[$k]['shiji_rate']=floatval(($log[$k]['base_rate']+ $log[$k]['enclosure_rate']+$log[$k]['dog_rate'])).'%';


                } 
            }
             
            $this->echoJson($log); 
        }
        $this->echoJson(-1);

    }
    //获取每当月1号到下个月1号的  打扫收益，孵化机收益。历史产蛋总和    
    public function gethistory(){
        $BeginDate=date('Y-m-d', strtotime(date("Y-m-01"))); 
        $nextmonth=strtotime("$BeginDate +1 month ");
        $thismonth=strtotime("$BeginDate");
        
        $machine_animal=0;
        $egg=0;
       
        $where=" userid=".$this->userId." and create_time > $thismonth and create_time < $nextmonth";
        
        $user = $this->getUsermsg($this->userId); 
        $allmoney=M('rate_log')->where($where)->field('machine_animal,all_currency')->select();
        if($allmoney){
            foreach($allmoney as $v){
                $machine_animal+=$v['machine_animal'];
                $egg+=$v['all_currency'];
            }
        }
        $dasao=M('clean_log')->where("userid =".$this->userId." and create_time > $thismonth and create_time < $nextmonth")->field(" sum(rate) as dasao")->find();
        $data['machine_animal']=$machine_animal;
        $data['egg']=$egg;
        $data['dasao']=$dasao['dasao']+0;
        $this->echoJson($data);

    }
    public function clearnfriend(){ 
        if(IS_POST){ 
            $this->checkGet(array('toUserId'));
            $clean_rate=C('clean_rate')?C('clean_rate')/100:0.1;
            $toUserId = I('post.toUserId'); 
            $user = $this->getUsermsg($this->userId); 
            $friend=M('member')->where(array('id'=>$toUserId,'references'=>$user['account'],'egg_parent_status'=>1))->find(); 
            if($this->isFalse($friend)){
                 $this->echoJson('你已经打扫过了');
            }
            $alllog=M('rate_log')->where('userid='.$toUserId)->order('task_id desc ')->find();
            $rate= $friend['all_rate']*$clean_rate; 
            M('member')->where(array('id'=>$this->userId))->setInc('currency',$rate); 
            M('member')->where(array('id'=>$toUserId))->setField('egg_parent_status',2);
            $msg['create_time'] =time();
            $msg['userid'] =$this->userId;
            $msg['rate'] =$rate;
            $msg['friendid']=$toUserId;
            $msg['task_id']=$alllog['task_id'];
            M('clean_log')->add($msg);
             echo json_encode(array('errcode'=>10000,'msg'=>'打扫成功！','currency'=>$rate));exit;
        }
        $this->echoJson(-1);

    }
    public function clearnallfriend(){
        if(IS_POST){ 
            $user = $this->getUsermsg($this->userId); 
            if($user['one_clean']==0){
                 $this->echoJson('请购买一键打扫功能！');
            }
            $membermodel=M('member');
            //$users=$membermodel->where(array('references'=>$user['account'],'egg_parent_status'=>1))->getField('id',true);
            $friends= $membermodel->where(array('references'=>$user['account'],'egg_parent_status'=>1))->select();
             if($this->isFalse($friends)){
                 $this->echoJson('你已经打扫过了！');
            }
           // $userids=explode(',',$users);
            $clean_rate=C('clean_rate')?C('clean_rate')/100:0.1;
            $task= M('rate_task')->order('id desc')->find();
           // $allrate=M('rate_log')->where('userid in ('.$userids.' ) and task_id='.$task['id'])->select();
            $allrate=0;
            foreach($friends as $v){
                $rate= $v['all_rate']*$clean_rate;
                $membermodel->where(array('id'=>$this->userId))->setInc('currency',$rate); 
                $membermodel->where(array('id'=>$v['id']))->setField('egg_parent_status',2);
                $msg['userid'] =$this->userId;
                $msg['create_time'] =time();
                $msg['rate'] =$rate;
                $msg['friendid']=$v['id'];
                $msg['task_id']=$v['task_id'];
                $allrate+=$rate;
                M('clean_log')->add($msg);
            }
            echo json_encode(array('errcode'=>10000,'msg'=>'打扫成功！','currency'=>$allrate));exit;
           
             
            
             
             
        }
        $this->echoJson(-1);
        
    }
    //打扫记录
    public function  cleanlog(){
         
         $log=M('clean_log l')->field('l.create_time,l.rate,m.account')->join('gs_member as m on m.id = l.friendid') ->where(array('l.userid'=>$this->userId))->order('l.id desc')->select(); 
        if($this->isFalse($log)){
             echo json_encode(array('errcode'=>-1,'msg'=>'没有打扫记录！'));exit;
         }
        foreach($log as $k=>$v){ 
            $log[$k]['create_time']=date('Y-m-d ',$v['create_time']);
         } 
         $this->echoJson($log);

    }
    //孵化记录
    public function hatcherylog(){
        $log=M('farm_log')->where('type=2 and userid='.$this->userId)->order('id desc')->select();
        if($this->isFalse($log)){
             $this->echoJson(10000);
        }
        foreach($log as $k=>$v){ 
            $log[$k]['create_time']=date('Y-m-d ',$v['create_time']);
        } 
        $this->echoJson($log);
    }

    //增养记录
    public function addanimallog(){

        $log=M('farm_log')->where('type=1 and userid='.$this->userId)->order('id desc')->select();
        if($this->isFalse($log)){
             $this->echoJson(10000);
        }
        foreach($log as $k=>$v){ 
            $log[$k]['create_time']=date('Y-m-d ',$v['create_time']);
         } 
         $this->echoJson($log);

    }
    public function transferlog(){  
       // $this->userId=206;
        $log=M('transfer_log l')->field('create_time,type,realprice,member.account,l.status')->join('gs_member as member on member.id = l.touserid') ->where(array('l.userid'=>$this->userId))->order('l.id desc')->select(); 
        if($this->isFalse($log)){
             $this->echoJson(10000);
         }
         foreach($log as $k=>$v){
            $log[$k]['transtype']=$v['type']==1?'送鹅':'送蛋';
            $log[$k]['create_time']=date('Y-m-d ',$v['create_time']);
         } 
         $this->echoJson($log);

    }
    public function gameconfig(){ 
            $path = 'App/Common/Conf/system.php';
            $file = include $path;
            $config['one_clean']=$file['one_clean'];
            $dogmsg=M('dogmsg')->field('lev,updatedog_num as num,upgrade_percent')->order('lev asc')->select();
            $allconfig['dogmsg']=$dogmsg;
            $allconfig['sysconf']=$config;
            $this->echoJson($allconfig);
         
    }
    public function updateusermsg(){ //真实姓名不可修改 ,推荐人账号。手机号 这3个不可修改其他都可以修改 
        $post=I('post.');
        $user = $this->getUsermsg($this->userId);
        if($post['password']){
            if(!$post['oldpassword']){
                 $this->echoJson('请输入旧的登录密码!');
            }
            if(md5($post['oldpassword'])!=$user['password']){
                $this->echoJson('旧的登录密码错误!');
            }
            $save['password']=md5($post['password']); 
        }
        if($post['highpass']){
            if(!$post['oldhighpass']){
                 $this->echoJson('请输入旧的支付密码!');
            }
            if(md5($post['oldhighpass'])!=$user['highpass']){
                $this->echoJson('旧的支付密码错误!');
            }
            $save['highpass']=md5($post['highpass']); 
        }
        if($post['nickname']){
            $save['nickname']=$post['nickname']; 
        }
        if($post['sex']){
            $save['sex']=$post['sex']; 
        }
        if($post['wechat']){
            $save['wechat']=$post['wechat']; 
        }
        if($post['alipay']){
            $save['alipay']=$post['alipay']; 
        }
        M('member')->where(array('id'=>$this->userId))->save($save);
        echo json_encode(array('errcode'=>10000,'msg'=>'更改成功！'));exit;
        
    }

      public function txanimal(){
        if(IS_POST){ 
            $this->checkGet(array('num')); //提现推荐奖 
            $num=I('post.num')+0;  
            if($num <50 || ($num % 50 !=0 )){
                $this->echoJson('提现数量必须是50的倍数！'); 
            }
            $usermsg= $this->getUsermsg(); 
            if($usermsg['tixian_animal'] < $num){
                $this->echoJson('提现失败！数量不足！当前推荐奖励鹅只有'.$usermsg['tixian_animal'].'只'); 
            }
            // $usermsg['tixian_animal']*0.1;
            $savedata['animal_num']=$usermsg['animal_num']+$num*0.9;
            $savedata['tixian_animal']=$usermsg['tixian_animal']-$num;  
            $res=M('member')->where( 'id='.$this->userId.' and tixian_animal >='.$num)->save($savedata);
           // echo M()->getlastsql();exit;
            if($this->isFalse($res)){
                $this->echoJson('提现失败！');exit;
            }
            echo json_encode(array('errcode'=>10000,'msg'=>'提出成功，扣除10%手续费后提出鹅'.$savedata['animal_num'].'只'));exit;
             
        }
    
    }
    public function lottery(){
        $data= M('lottery')->field('id,name')->select(); 
        $this->ajaxReturn(array('errcode'=>10000,'result'=>$data,'animal_num'=>5));
        
    }

    public function lotteryRun(){
        
 
        $user = $this->getUsermsg($this->userId);
        $paylottery=5;
        if($user['animal_num']<$paylottery){
            $this->echoJson("抽奖失败，必须要$paylottery 只鹅才能抽奖"); 
        }

        $result = M('member')->where("id=".$this->userId." and animal_num>$paylottery " )->setDec('animal_num',$paylottery);
        if($this->isFalse($result) ){
                $this->echoJson(-1);
        }
        //addLog($this->userId,'开'.$type==1?'绿':'金'.'池',4,$animal);
         
       

        //lottery
        $ret3= M('lottery')->select(); 
         
        $arr = array();
        $ret4 = array();
        foreach ($ret3 as $val) {
            $arr[$val['id']] = $val['percent'];
            $ret4[$val['id']] = $val;
        }

        $rid = $this->get_rand($arr); //根据概率获取奖项id
        $res = $ret4[$rid]['id']; //中奖项

        if($ret4[$rid]['type']==0){ 
            M('member')->where("id=".$this->userId)->setInc('animal_num',$ret4[$rid]['animal_num']); 
        }
        //抽奖记录
        $insert = array(
            'userid' => $this->userId,
            'animal_num' => $ret4[$rid]['animal_num'],
            'name' => $ret4[$rid]['name'],
            'create_time' => time(),
            'send' => $ret4[$rid]['type']==0 ? 1 : 0,
        );
        M('lottery_record')->add($insert); 
        echo json_encode(array('errcode'=>10000,'id'=>$res));exit; 

    }
    private function get_rand($proArr) {
        $result = '';
        //概率数组的总概率精度
        $proSum = array_sum($proArr);

        //概率数组循环
        foreach ($proArr as $key => $proCur) {
            $randNum = mt_rand(1, $proSum);
            if ($randNum <= $proCur) {
                $result = $key;
                break;
            } else {
                $proSum -= $proCur;
            }
        }
        unset ($proArr);

        return $result;
    }





	
}